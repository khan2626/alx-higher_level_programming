#!/usr/bin/python3
#2-matrix_divided.py
"""Divides all element of matrix"""


def matrix_divided(matrix, div):
    """Divides all element of matrix.
    Args:
    div: denomenator
    matrix[]: numerator
    Raises:
    TypeError if matix is not a list, int or fl
    TypeError if row sizes are uneven
    TypeError if div is not int or fl
    ZeroDivisionError if div is 0
    Returns:
    a new matrix with result
    """
    if (not isinstance(matrix, list) or matrix == [] or
        not all(isinstance(row, list) for row in matrix) or
        not all((data, int) or isinstance(data, float))
        for data in ([n for row in matrix for n in row])):
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
    if not all(len(row) == len(matrix[0]) for row in matrix):
        raise TypeError("Each row of the matrix must have the same size")
    if not (isinstance(div, int) or isinstance(div, float)):
        raise TypeError("div must be a number")
    if div == 0:
        raise ZeroDivisionError("division by zero")
    return ([list(map(lambda x: round(x / div, 2), row)) for row in matrix])
